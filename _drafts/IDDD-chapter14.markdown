---
layout: "post"
title: "IDDD 14장. 애플리케이션"
date: "2018-06-17 18:46"
tags:
    - IDDD
    - DDD
    - BOOK
---

* 사용자 인퍼페이스와 도메인 모델 사이에 위치
    * 유스케이스 태스크를 조정
* 트랜잭션, 보안 권한 부여 담당

> 애플리케이션을 핵심 도메인 모델과 상호 교류하며 이를 지원하기 위해 잘 조합된 컴포넌트의 집합을 의미하기 위해 사용하고 있다.
> 이는 일반적으로 도메인 모델 그 자체와 사용자 인터페이스, 내부적으로 사용되는 애플리케이션 서비스, 인프라적 컴포넌트를 뜻한다.
> 이 각각의 영역에 어떤 것들이 들어가는지는 애플리케이션마다 다르며, 사용하는 아키텍처가 무엇인지에 따라서도 달라진다.

![특정한 한 가지 아키텍처에 국한되지 않은 주요 애플리케이션 영역. 여전히 각기 다른 영역의 추상화에 의존적인 인프라의 DIP를 강조한다.](/images/2018/06/IDDD-figure-14-1.png)

`그림 14.1` *특정한 한 가지 아키텍처에 국한되지 않은 주요 애플리케이션 영역. 여전히 각기 다른 영역의 추상화에 의존적인 인프라의 DIP를 강조한다.*

`ui.Controller` `-구현->` `infra.TomcatController` `-위임->` `application.Service` `-구현->` `infra.TransactionalService` `-위임->` `domain.Repository` `-구현->` `infra.JpaRepository` `-의존->` `infra.Mysql`

* 필자는 `UI` -> `Appcliation` -> `Infra` 순서로 설명해 나간다. (Top-Down 방식)

## 사용자 인터페이스

UI 종류

1. Web 1.0 렌더링 되는 HTML
2. Web 2.0 DHTML + Ajax
3. 데스크톱 애플리케이션 + HTTP 통신

### 도메인 객체의 렌더링



### 애그리게잇 인스턴스로부터 데이터 전송 객체를 렌더링하기

### 애그리게잇 내부 상태를 발행하기 위해 중재자를 사용하자

### 도메인 페이로드 객체로부터 애그리게잇 인스턴스를 렌더링하라

### 애그리게잇 인스턴스의 상태 표현

### 유스케이스 최적 리파지토리 쿼리

### 다수의 개별 클라이언트 처리하기

### 변환 어댑터와 사용자 편집의 처리

## 애플리케이션 서비스

### 애플리케이션 서비스 예제

### 결합이 분리된 서비스 출력

## 여러 바운디드 컨텍스트 묶기

## 인프라

## 엔터프라이즈 컴포넌트 컨테이너

## 마무리